services:
  # Serviço para o PHP (Laravel)
  php:
    build:
      context: ./pastelaria-api
    container_name: pastelaria-api
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./pastelaria-api:/var/www
    networks:
      - app_network
    depends_on:
      - db
    ports:
      - "9000:9000"  # Permite acessar diretamente pelo Postman
    environment:
      APP_KEY: ${APP_KEY}
      APP_DEBUG: ${APP_DEBUG}
    command: >
      sh -c "chmod -R 777 storage bootstrap/cache && php artisan storage:link && php artisan migrate:fresh --seed && php-fpm"

  # Serviço para o Nginx
  nginx:
    image: nginx:latest
    container_name: pastelaria-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./pastelaria-api:/var/www
      - ./pastelaria-frontend:/usr/share/nginx/html
    ports:
      - "8080:80"
    depends_on:
      - php
    networks:
      - app_network

  # Serviço para o banco de dados MySQL (Produção)
  db:
    image: mysql:9.1
    container_name: pastelaria-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app_network

  # Serviço para o banco de dados MySQL (Testes)
  db_test:
    image: mysql:9.1
    container_name: pastelaria-db-test
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE_TEST}
    volumes:
      - db_test_data:/var/lib/mysql
    networks:
      - app_network

  # Serviço para o Frontend (Quasar Framework)
  frontend:
    build:
      context: ./pastelaria-frontend
    container_name: pastelaria-frontend
    restart: unless-stopped
    networks:
      - app_network
    ports:
      - "8090:80"
    depends_on:
      - nginx

# Volumes para persistir dados
volumes:
  db_data:
    driver: local
  db_test_data:
    driver: local

# Redes para comunicação entre os containers
networks:
  app_network:
    driver: bridge
